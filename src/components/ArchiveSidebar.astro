---
import { groupPostsByYearAndMonth } from '../utils/posts';

interface Props {
  posts: Array<{
    slug: string;
    data: {
      title: string;
      pubDate: Date;
    };
  }>;
}

const { posts } = Astro.props;
const groupedPosts = groupPostsByYearAndMonth(posts);

// Get all unique post categories
const categories = [...new Set(posts.map(post => post.data.category).filter(Boolean))];
---

<div class="space-y-8">
  <!-- Search Box -->
  <div class="mb-6">
    <h3 class="text-lg font-semibold mb-4 text-gray-900 dark:text-white">Search Posts</h3>
    <div class="relative">
      <input 
        type="text" 
        id="search-input" 
        placeholder="Search articles..." 
        class="w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-white shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-500 focus:ring-opacity-50 pl-10 py-2 text-sm transition-colors duration-200"
      />
      <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
      </div>
    </div>
    <div id="search-results" class="mt-2 space-y-2 hidden">
      <!-- Search results will be inserted here via JavaScript -->
    </div>
  </div>

  <!-- Categories Section -->
  <div class="mb-6">
    <h3 class="text-lg font-semibold mb-4 text-gray-900 dark:text-white">Categories</h3>
    <ul class="space-y-2">
      {categories.map(category => (
        <li>
          <a 
            href={`/categories/${category?.toLowerCase()}`} 
            class="inline-flex items-center text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-200"
          >
            <span class="w-2 h-2 rounded-full bg-primary-500 mr-2"></span>
            {category}
          </a>
        </li>
      ))}
    </ul>
  </div>

  <!-- Archive Section -->
  <div>
    <h3 class="text-lg font-semibold mb-4 text-gray-900 dark:text-white">Archive</h3>
    
    <div class="space-y-4">
      {Object.entries(groupedPosts).sort(([yearA], [yearB]) => Number(yearB) - Number(yearA)).map(([year, months]) => (
        <div class="archive-year">
          <button class="flex items-center justify-between w-full text-left font-medium py-2 text-gray-900 dark:text-white hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-200">
            <span>{year}</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 transform transition-transform duration-200" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </button>
          
          <ul class="pl-4 mt-2 space-y-2 archive-months">
            {Object.entries(months).sort(([monthA], [monthB]) => Number(monthB) - Number(monthA)).map(([month, monthPosts]) => (
              <li>
                <button class="flex items-center justify-between w-full text-left text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-200">
                  <span>{new Date(Number(year), Number(month) - 1).toLocaleString('default', { month: 'long' })} ({monthPosts.length})</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 transform transition-transform duration-200" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </button>
                
                <ul class="pl-4 mt-1 space-y-1 hidden archive-posts">
                  {monthPosts.map(post => (
                    <li>
                      <a 
                        href={`/blog/${post.slug}`}
                        class="text-gray-600 dark:text-gray-400 hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-200 line-clamp-1"
                      >
                        {post.data.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</div>

<script>
  // Toggle archive year/month sections
  document.querySelectorAll('.archive-year > button').forEach(button => {
    button.addEventListener('click', () => {
      const monthsList = button.nextElementSibling;
      const icon = button.querySelector('svg');
      
      monthsList.classList.toggle('hidden');
      icon.classList.toggle('rotate-180');
    });
  });
  
  document.querySelectorAll('.archive-months button').forEach(button => {
    button.addEventListener('click', () => {
      const postsList = button.nextElementSibling;
      const icon = button.querySelector('svg');
      
      postsList.classList.toggle('hidden');
      icon.classList.toggle('rotate-180');
    });
  });
</script>