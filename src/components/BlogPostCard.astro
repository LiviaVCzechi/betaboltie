---
import { formatDate } from '../utils/date';

interface Props {
  post: {
    slug: string;
    data: {
      title: string;
      description: string;
      pubDate: Date;
      updatedDate?: Date;
      image?: string;
      category?: string;
      author?: string;
      readingTime?: string;
    };
  };
  featured?: boolean;
}

const { post, featured = false } = Astro.props;
const { slug, data } = post;
const { title, description, pubDate, image, category, author, readingTime } = data;

// Default image if none provided
const postImage = image || 'https://images.pexels.com/photos/2582937/pexels-photo-2582937.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2';
---

<article class={`overflow-hidden rounded-lg shadow-md hover:shadow-lg transition-all duration-300 flex ${featured ? 'flex-col md:flex-row' : 'flex-col'}`}>
  <a href={`/blog/${slug}`} class={`block ${featured ? 'md:w-1/2' : 'w-full'}`}>
    <div class="relative overflow-hidden aspect-video bg-gray-100 dark:bg-gray-800">
      <img 
        src={postImage} 
        alt={title} 
        class="w-full h-full object-cover transition-transform duration-500 hover:scale-105"
        loading="lazy"
      />
      {category && (
        <span class="absolute top-4 right-4 bg-primary-500 text-white text-xs font-medium px-2.5 py-1 rounded">
          {category}
        </span>
      )}
    </div>
  </a>
  
  <div class={`flex flex-col p-6 ${featured ? 'md:w-1/2' : 'w-full'}`}>
    <div class="flex items-center space-x-1 text-sm text-gray-500 dark:text-gray-400 mb-2">
      <time datetime={pubDate.toISOString()}>{formatDate(pubDate)}</time>
      <span>â€¢</span>
      <span>{readingTime || '5 min read'}</span>
    </div>
    
    <h3 class="text-xl font-bold mb-2 line-clamp-2 text-gray-900 dark:text-white">
      <a 
        href={`/blog/${slug}`} 
        class="hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-200"
      >
        {title}
      </a>
    </h3>
    
    <p class="text-gray-600 dark:text-gray-400 line-clamp-3 mb-4">
      {description}
    </p>
    
    {author && (
      <div class="mt-auto flex items-center">
        <div class="w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center overflow-hidden">
          <span class="text-xs font-medium">{author.charAt(0)}</span>
        </div>
        <span class="ml-2 text-sm font-medium text-gray-700 dark:text-gray-300">{author}</span>
      </div>
    )}
    
    <a 
      href={`/blog/${slug}`} 
      class="mt-4 text-primary-500 dark:text-primary-400 font-medium hover:underline inline-flex items-center"
    >
      Read more
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </a>
  </div>
</article>