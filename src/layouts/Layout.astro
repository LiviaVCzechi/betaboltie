---
import '@fontsource/inter/400.css';
import '@fontsource/inter/500.css';
import '@fontsource/inter/700.css';
import '@fontsource/montserrat/600.css';
import '@fontsource/montserrat/700.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ThemeToggle from '../components/ThemeToggle.astro';

interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
}

const { 
  title = 'TechInsights - Electronic Resources for Professionals',
  description = 'Corporate insights and resources on the latest electronic technologies and trends.',
  ogImage = '/images/og-image.jpg'
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="twitter:card" content="summary_large_image" />
    <title>{title}</title>
    <script>
      (function(){if(!window.chatbase||window.chatbase("getState")!=="initialized"){window.chatbase=(...arguments)=>{if(!window.chatbase.q){window.chatbase.q=[]}window.chatbase.q.push(arguments)};window.chatbase=new Proxy(window.chatbase,{get(target,prop){if(prop==="q"){return target.q}return(...args)=>target(prop,...args)}})}const onLoad=function(){const script=document.createElement("script");script.src="https://www.chatbase.co/embed.min.js";script.id="1cwoRET0gX-vMOTkoZJuk";script.domain="www.chatbase.co";document.body.appendChild(script)};if(document.readyState==="complete"){onLoad()}else{window.addEventListener("load",onLoad)}})();
    </script>
  </head>
  <body class="min-h-screen bg-white dark:bg-gray-900 text-gray-800 dark:text-gray-100 transition-colors duration-300">
    <div class="flex flex-col min-h-screen">
      <Header />
      <main class="flex-grow container mx-auto px-4 py-8">
        <slot />
      </main>
      <Footer />
    </div>
    <ThemeToggle />
    
    <script>
      // Check for user's preferred theme
      const isDarkMode = localStorage.getItem('theme') === 'dark' || 
        (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches);
      
      if (isDarkMode) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    </script>
  </body>
</html>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  @layer base {
    body {
      @apply antialiased font-sans;
    }
    
    h1, h2, h3, h4, h5, h6 {
      @apply font-heading font-semibold;
    }
    
    h1 {
      @apply text-4xl md:text-5xl leading-tight;
    }
    
    h2 {
      @apply text-3xl md:text-4xl leading-tight;
    }
    
    h3 {
      @apply text-2xl md:text-3xl leading-tight;
    }
    
    h4 {
      @apply text-xl md:text-2xl leading-tight;
    }
    
    a {
      @apply transition-colors duration-200;
    }
  }

  @layer components {
    .btn {
      @apply inline-flex items-center justify-center px-4 py-2 rounded-md font-medium transition-all duration-200;
    }
    
    .btn-primary {
      @apply btn bg-primary-500 text-white hover:bg-primary-600;
    }
    
    .btn-secondary {
      @apply btn bg-secondary-500 text-white hover:bg-secondary-600;
    }
    
    .btn-outline {
      @apply btn border border-gray-300 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800;
    }
  }
</style>